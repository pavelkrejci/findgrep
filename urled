#!/bin/bash

usage()
{
	echo $1
	echo "Usage: `basename $0` -e | -d [-f <file>]"	
	echo "URL encode/decode either stdin or <file> line by line"
	echo
	exit 1
}

urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }

rawurlencode() {
	local string="${1}"
	local strlen=${#string}
	local encoded=""
	local pos c o

	for (( pos=0 ; pos<strlen ; pos++ )); do
		c=${string:$pos:1}
		case "$c" in
			[-_.~a-zA-Z0-9] ) o="${c}" ;;
			* )               printf -v o '%%%02x' "'$c"
		esac
		encoded+="${o}"
	done
	echo "${encoded}"    # You can either set a return variable (FASTER)
	REPLY="${encoded}"   #+or echo the result (EASIER)... or both... :p
}

################################################
# MAIN
################################################
[ $# -eq 0 ] && usage

while getopts "edf:" opt; do
	case "$opt" in
		e)
			MODE="e"
			;;
		d)
			MODE="d"
			;;
		f)
			FILE="$OPTARG"
			;;
		\?)
			echo "Error: Invalid option: -$OPTARG" >&2
			exit 1
			;;
		:)
			echo "Error: Option -$OPTARG requires an argument." >&2
			exit 1
			;;
	esac
done
shift $((OPTIND-1))
[ -z "$MODE" ] && usage "Error: encode/decode mode not defined."
[ -n "$FILE" -a ! -r "$FILE" ] && usage "Error: Cannot read file $FILE"

#input either from argument or from stdin
[ -z "$FILE" ] && FILE="/dev/stdin"
case "$MODE" in
	e)
		while read x; do
			rawurlencode "$x"	
		done <$FILE
		;;
	d)  #using bash idiom instead of function urldecode is much faster
		while read x; do
			: "${x//+/ }"; printf '%b\n' "${_//%/\\x}"
		done <$FILE
		;;
esac

exit 0

